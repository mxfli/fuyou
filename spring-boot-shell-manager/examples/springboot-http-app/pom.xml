<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>springboot-http-app</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Spring Boot HTTP Test App</name>
    <description>Test application for startup.sh script</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>2.7.18</spring-boot.version>
        <!-- 默认使用 fat jar 模式 -->
        <packaging.mode>fat</packaging.mode>
    </properties>

    <!-- Maven Profiles for different packaging modes -->
    <profiles>
        <!-- Fat JAR Profile (Default) - Spring Boot executable JAR -->
        <profile>
            <id>fat-jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.mode>fat</packaging.mode>
                <jar.classifier></jar.classifier>
                <spring-boot.repackage.skip>false</spring-boot.repackage.skip>
            </properties>
        </profile>

        <!-- Thin JAR Profile - Standard Java JAR with external dependencies -->
        <profile>
            <id>thin-jar</id>
            <properties>
                <packaging.mode>thin</packaging.mode>
                <jar.classifier>thin</jar.classifier>
                <spring-boot.repackage.skip>true</spring-boot.repackage.skip>
            </properties>
            <build>
                <plugins>
                    <!-- Maven JAR Plugin - 配置 MANIFEST.MF -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.2.2</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <!-- 添加 classpath 到 MANIFEST.MF -->
                                    <addClasspath>true</addClasspath>
                                    <!-- 设置 classpath 前缀 -->
                                    <classpathPrefix>lib</classpathPrefix>
                                    <!-- 设置主类 -->
                                    <mainClass>com.example.demo.DemoApplication</mainClass>
                                    <!-- 使用唯一版本号 -->
                                    <useUniqueVersions>false</useUniqueVersions>
                                </manifest>
                                <manifestEntries>
                                    <!-- 自定义 Class-Path 条目，包含 appconfig 和 lib/* -->
                                    <Class-Path>appconfig/</Class-Path>
                                    <!-- 应用信息 -->
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Implementation-Vendor>Example Corp</Implementation-Vendor>
                                    <!-- Spring Boot 相关信息 -->
                                    <Spring-Boot-Version>${spring-boot.version}</Spring-Boot-Version>
                                    <Start-Class>com.example.demo.DemoApplication</Start-Class>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>

                    <!-- Maven Dependency Plugin - 复制依赖到 lib 目录 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>false</overWriteSnapshots>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <!-- 排除 provided 和 test 范围的依赖 -->
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Maven Resources Plugin - 复制配置文件到 appconfig 目录 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-config-files</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/appconfig</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>application*.yml</include>
                                                <include>application*.yaml</include>
                                                <include>application*.properties</include>
                                                <include>logback*.xml</include>
                                                <include>log4j*.xml</include>
                                                <include>redis.properties</include>
                                                <include>database.properties</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Maven Assembly Plugin - 创建完整的分发包 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/thin-jar-distribution.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}-${project.version}-thin</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot Starter Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Actuator for health checks and shutdown endpoint -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>springboot-http-app-${packaging.mode}</finalName>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <skip>${spring-boot.repackage.skip}</skip>
                    <classifier>${jar.classifier}</classifier>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <!-- Copy only startup.sh and setup.sh to target/bin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-scripts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../../</directory>
                                    <includes>
                                        <include>startup.sh</include>
                                        <include>setup.sh</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
